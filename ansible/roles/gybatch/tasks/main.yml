---
- name: install packages
  apt: name={{ item }} update_cache=yes force=yes state=latest
  with_items:
    - build-essential
    - python-software-properties
    - git-core
    - python-jinja2
    - vim
    - python-psycopg2
    - python-virtualenv
    - python-pip
    - python-dev
    - python-numpy
    - dos2unix
    - sqlite3

    - unixodbc
    - unixodbc-dev
    - odbc-postgresql
    - gfortran
    - cmake
    - subversion

- name: configure ODBC
  copy:
    src={{ item }}
    dest=/etc/{{ item }}
    owner=root
    mode=0644
  with_items:
    - odbc.ini
    - odbcinst.ini

# CELERY
- name: install celery dependencies
  apt: name={{ item }} update_cache={{ update_apt_cache }} force=yes state=installed
  with_items:
    - supervisor
    - redis-server
#    - nginx-full

- name: install required python packages
  pip: requirements=/usr/local/apps/growth-yield-batch/requirements.txt state=present

- name: create celery worker user
  user: name=celery createhome=no system=yes state=present

- name: create celery task directory
  file: path=/var/celery owner=celery group=adm state=directory

- name: configure celery
  copy: src=celeryconfig.py dest=/var/celery

- name: link celery tasks
  file:
    src=/usr/local/apps/growth-yield-batch/scripts/{{ item }}
    dest=/var/celery/{{ item }}
    state=link
  with_items:
    - tasks.py
    - run_fvs.py
    - extract.py

- name: create celery log directory
  file: path=/var/log/celery owner=celery group=adm state=directory

- name: configure celery log rotation
  copy: src=logrotate_celery dest=/etc/logrotate.d/celery

- name: create supervisor config directory
  file: path=/etc/supervisor/conf.d state=directory mode=0755

- name: write supervisor config file
  copy: src=supervisor_celery dest=/etc/supervisor/conf.d/celery.conf
  notify:
    - restart supervisor

## NGINX
## Running Flower behind a reverse proxy:
## http://mher.github.io/flower/reverse-proxy.html?highlight=nginx
#- name: create gybatch site
#  copy:
#    src=gybatch.nginx
#    dest=/etc/nginx/sites-available/gybatch
#
#- name: enable gybatch site
#  file:
#    src=/etc/nginx/sites-available/gybatch
#    dest=/etc/nginx/sites-enabled/gybatch
#    state=link
#
#- name: remove default site
#  file:
#    path=/etc/nginx/sites-enabled/default
#    state=absent
#
#- name: update passwords
#  htpasswd:
#    path=/usr/local/apps/growth-yield-batch/celeryflower-passwords
#    name={{ flower_user }}
#    password={{ flower_pass }}
#    create=yes
#    state=present

- name: link scripts
  file:
    src=/usr/local/apps/growth-yield-batch/scripts/{{ item.src }}
    dest=/usr/local/bin/{{ item.dest }}
    state=link
    mode=0775
  with_items:
    - { src: 'run_fvs.py', dest: 'run_fvs' }
    - { src: 'batch_fvs.py',  dest: 'batch_fvs' }
    - { src: 'batch_fvs_celery.py',  dest: 'batch_fvs_celery' }
    - { src: 'build_keys.py',  dest: 'build_keys' }
    - { src: 'status_fvs', dest: 'status_fvs' }
    #- csvs_to_sqlite

